<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>tutorials</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>tutorials.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>installation</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>installation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>introduction</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>introduction.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRTP</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>CRTP</Scope>
    </TokenIdentifier>
    <Path>class_c_r_t_p.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EdgeConfigs</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>EdgeConfigs</Scope>
    </TokenIdentifier>
    <Path>struct_edge_configs.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EdgeConfigs&lt; 1 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>EdgeConfigs&lt; 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>struct_edge_configs_3_011_01_4.html</Path>
    <Abstract>The static const member data abscissas is initialized only once when Quadrature&amp;lt;1,qOrder,QuadratureRule&amp;gt; is first encountered.</Abstract>
    <DeclaredIn>SplineNodeBase_CatmullRom_EnergySimple0.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::map</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>map</Scope>
    </TokenIdentifier>
    <Path>classstd_1_1map.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boost::noncopyable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>noncopyable</Scope>
    </TokenIdentifier>
    <Path>classboost_1_1noncopyable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boost::ptr_map</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ptr_map</Scope>
    </TokenIdentifier>
    <Path>classboost_1_1ptr__map.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boost::ptr_vector</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>ptr_vector</Scope>
    </TokenIdentifier>
    <Path>classboost_1_1ptr__vector.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::set</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>set</Scope>
    </TokenIdentifier>
    <Path>classstd_1_1set.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SphericalIndenter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SphericalIndenter</Scope>
    </TokenIdentifier>
    <Path>class_spherical_indenter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SplineNodeBase&lt; Derived, dim, 0, Hermite &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 0, Hermite &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_010_00_01_hermite_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 0, Hermite &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_010_00_01_hermite_01_4.html</Path>
    <Anchor>a9a3c481faf1a1fa03c04d21593465a6e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SplineNodeBase&lt; Derived, dim, 1, CatmullRom &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 1, CatmullRom &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_011_00_01_catmull_rom_01_4.html</Path>
    <Abstract>The static const member data abscissas is initialized only once when Quadrature&amp;lt;1,qOrder,QuadratureRule&amp;gt; is first encountered.</Abstract>
    <DeclaredIn>SplineNodeBase_CatmullRom_EnergySimple0.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 1, CatmullRom &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_011_00_01_catmull_rom_01_4.html</Path>
    <Anchor>a5b01d4370818a351d072fb5b2b559c53</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>topologyChangeActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 1, CatmullRom &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_011_00_01_catmull_rom_01_4.html</Path>
    <Anchor>adff68b77a438f0b310b8f9754506bb9d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_T</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 1, CatmullRom &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_011_00_01_catmull_rom_01_4.html</Path>
    <Anchor>abb1c3980304e6fe7cee6c13792726f69</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 1, CatmullRom &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_011_00_01_catmull_rom_01_4.html</Path>
    <Anchor>a5b01d4370818a351d072fb5b2b559c53</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>topologyChangeActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 1, CatmullRom &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_011_00_01_catmull_rom_01_4.html</Path>
    <Anchor>adff68b77a438f0b310b8f9754506bb9d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>make_T</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 1, CatmullRom &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_011_00_01_catmull_rom_01_4.html</Path>
    <Anchor>abb1c3980304e6fe7cee6c13792726f69</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SplineNodeBase&lt; Derived, dim, 1, Hermite &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 1, Hermite &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_011_00_01_hermite_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 1, Hermite &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_011_00_01_hermite_01_4.html</Path>
    <Anchor>a18ea05f9273ef76a9f5bb6c15223557a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SplineNodeBase&lt; Derived, dim, 2, Hermite &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 2, Hermite &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_012_00_01_hermite_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>SplineNodeBase&lt; Derived, dim, 2, Hermite &gt;</Scope>
    </TokenIdentifier>
    <Path>class_spline_node_base_3_01_derived_00_01dim_00_012_00_01_hermite_01_4.html</Path>
    <Anchor>adb544b38facc3c16a85d4d44baa16ca9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bvpfe::Dof</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>bvpfe::Dof</Scope>
    </TokenIdentifier>
    <Path>classbvpfe_1_1_dof.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bvpfe::Domain</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>bvpfe::Domain</Scope>
    </TokenIdentifier>
    <Path>classbvpfe_1_1_domain.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bvpfe::Element</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>bvpfe::Element</Scope>
    </TokenIdentifier>
    <Path>classbvpfe_1_1_element.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bvpfe::Face</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>bvpfe::Face</Scope>
    </TokenIdentifier>
    <Path>classbvpfe_1_1_face.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bvpfe::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>bvpfe::Node</Scope>
    </TokenIdentifier>
    <Path>classbvpfe_1_1_node.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bvpfe::Point</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>bvpfe::Point</Scope>
    </TokenIdentifier>
    <Path>structbvpfe_1_1_point.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bvpfe::Tetrahedron</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>bvpfe::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classbvpfe_1_1_tetrahedron.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bvpfe::PointerWrapper</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>bvpfe::PointerWrapper</Scope>
    </TokenIdentifier>
    <Path>structbvpfe_1_1_pointer_wrapper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bvpfe::Triangle</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>bvpfe::Triangle</Scope>
    </TokenIdentifier>
    <Path>classbvpfe_1_1_triangle.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::SearchData</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::SearchData</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_search_data.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::VirtualBoundarySlipSurface</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::VirtualBoundarySlipSurface</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_virtual_boundary_slip_surface.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::GlidePlane</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::GlidePlane</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_glide_plane.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>segmentMeshCollisionPairContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>mmdl::GlidePlane</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_glide_plane.html</Path>
    <Anchor>aa6b38423e144f03bc5c975ad99cf19ed</Anchor>
    <Abstract>Make this const and initialize at constructor time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>planeNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>mmdl::GlidePlane</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_glide_plane.html</Path>
    <Anchor>acefcd5a8a03f58bd38cb61b2335d0075</Anchor>
    <Abstract>The non-unit vector defining the plane in space.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::FixedSizeArray</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::FixedSizeArray</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_fixed_size_array.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>mmdl::FixedSizeArray</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_fixed_size_array.html</Path>
    <Anchor>a25f141132e043cf993d0a40102a1b2e9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>mmdl::FixedSizeArray</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_fixed_size_array.html</Path>
    <Anchor>a74b3db3ee702d89d25b23fa56c623807</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>mmdl::FixedSizeArray</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_fixed_size_array.html</Path>
    <Anchor>aa12d97e5e6233054ee59a297d15e19bf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::FixedSizeArray&lt; T, 1 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::FixedSizeArray&lt; T, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_fixed_size_array_3_01_t_00_011_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>mmdl::FixedSizeArray&lt; T, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_fixed_size_array_3_01_t_00_011_01_4.html</Path>
    <Anchor>a27d6e1a4dedd0643d7a1430b23077fc4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::FixedSizeArray&lt; T, 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::FixedSizeArray&lt; T, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_fixed_size_array_3_01_t_00_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::DislocationNetworkRemesh</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::DislocationNetworkRemesh</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_dislocation_network_remesh.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::SplinePlotter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::SplinePlotter</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_spline_plotter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::MeshVertex</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::MeshVertex</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_mesh_vertex.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::ObservingMap</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::ObservingMap</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_observing_map.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>mmdl::ObservingMap</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_observing_map.html</Path>
    <Anchor>af8c4efb2db65cc5fd142dae9d23716a2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::ObservedByMap</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::ObservedByMap</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_observed_by_map.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObservedByMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>mmdl::ObservedByMap</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_observed_by_map.html</Path>
    <Anchor>a3eb0d472e082e333315357bd8241de9f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ObservedByMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>mmdl::ObservedByMap</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_observed_by_map.html</Path>
    <Anchor>a8da07509824049a801135c1ff83503b0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>mmdl::ObservedByMap</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_observed_by_map.html</Path>
    <Anchor>a5b451ca9cf70cac6c0f323e49f23ff7a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::ObservingSet</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::ObservingSet</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_observing_set.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mmdl::ObservingSet</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_observing_set.html</Path>
    <Anchor>afe26b818536e54ea52957e37501d1025</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::ObservedBySet</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::ObservedBySet</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_observed_by_set.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObservedBySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mmdl::ObservedBySet</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_observed_by_set.html</Path>
    <Anchor>aedbe041bd9e7a83b0b936d109cd8cf19</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObservedBySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mmdl::ObservedBySet</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_observed_by_set.html</Path>
    <Anchor>a3ede7512c99745446013286183944135</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ObservedBySet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mmdl::ObservedBySet</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_observed_by_set.html</Path>
    <Anchor>ac63bba9a6126d9f6b460b446130f4064</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>mmdl::ObservedBySet</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_observed_by_set.html</Path>
    <Anchor>a90f6747d16b9236ae961c6d908b51dcf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::ReferenceContainer</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::ReferenceContainer</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_reference_container.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::ReferenceContainer&lt; 2, T &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::ReferenceContainer&lt; 2, T &gt;</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_reference_container_3_012_00_01_t_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::ReferenceContainee</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::ReferenceContainee</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_reference_containee.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::Simplex</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::Simplex</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_simplex.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>mmdl::Simplex</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_simplex.html</Path>
    <Anchor>a7cb391b6c290f7a70434b446d50e73a1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>faceNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>mmdl::Simplex</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_simplex.html</Path>
    <Anchor>ae5443c41e6075ba16817266767eb1d80</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::SortSimplexID</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::SortSimplexID</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_sort_simplex_i_d.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::Simplex&lt; dim, 1 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::Simplex&lt; dim, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_simplex_3_01dim_00_011_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::Simplex&lt; dim, 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::Simplex&lt; dim, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_simplex_3_01dim_00_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::Simplex&lt; 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::Simplex&lt; 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_simplex_3_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::SimplexMesh</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::SimplexMesh</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_simplex_mesh.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::SimplexObserver</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::SimplexObserver</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_simplex_observer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::BaseGivensHTstep</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::BaseGivensHTstep</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_base_givens_h_tstep.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::GivensHTstep</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::GivensHTstep</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_givens_h_tstep.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::GivensHTstep&lt; N, 1, NmJ &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::GivensHTstep&lt; N, 1, NmJ &gt;</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_givens_h_tstep_3_01_n_00_011_00_01_nm_j_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::GivensHTstep&lt; N, 1, 3 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::GivensHTstep&lt; N, 1, 3 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmmdl_1_1_givens_h_tstep_3_01_n_00_011_00_013_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::GivensHT</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::GivensHT</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_givens_h_t.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::GramSchmidt</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::GramSchmidt</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_gram_schmidt.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::EdgeReader</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::EdgeReader</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_edge_reader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGood</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>mmdl::EdgeReader</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_edge_reader.html</Path>
    <Anchor>af346571f8eefa3ac7fdea04267e4bddb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mmdl::BinaryFileWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>mmdl::BinaryFileWriter</Scope>
    </TokenIdentifier>
    <Path>classmmdl_1_1_binary_file_writer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::EdgeConfigs</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::EdgeConfigs</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_edge_configs.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::EdgeConfigs&lt; 1 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::EdgeConfigs&lt; 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_edge_configs_3_011_01_4.html</Path>
    <Abstract>The static const member data abscissas is initialized only once when Quadrature&amp;lt;1,qOrder,QuadratureRule&amp;gt; is first encountered.</Abstract>
    <DeclaredIn>DislocationEnergyRules.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationEnergyRules</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationEnergyRules</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_energy_rules.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Isotropic</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::Isotropic</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_isotropic.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationField</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationField</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_field.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationField&lt; dim, Isotropic &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationField&lt; dim, Isotropic &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_field_3_01dim_00_01_isotropic_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displacementKernel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::DislocationField&lt; dim, Isotropic &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_field_3_01dim_00_01_isotropic_01_4.html</Path>
    <Anchor>affe466ffd919b2adb703cbd321a83aa7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationLocalReference</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationLocalReference</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_local_reference.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationNetwork</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationNetwork</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_network.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>output</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationNetwork</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_network.html</Path>
    <Anchor>ae4546ce06d4be60f106d0f94f2b558e0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>move</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationNetwork</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_network.html</Path>
    <Anchor>a0fc5864f08097b6a78920f703941aec9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runByStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationNetwork</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_network.html</Path>
    <Anchor>afe00092a3057bc88a8ff3251bf857979</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>singleStep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationNetwork</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_network.html</Path>
    <Anchor>a9dce9c6465e0f618200fcd0c265b9cb5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Nsteps</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::DislocationNetwork</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_network.html</Path>
    <Anchor>a96b7be27d564bf84cdadf918d0c52240</Anchor>
    <Abstract>The number of simulation steps taken by the next call to runByStep()</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationNetworkTraitsBase</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationNetworkTraitsBase</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_network_traits_base.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::TypeTraits&lt; DislocationNetwork&lt; 3, 1, CatmullRom, centripetal, 16, GaussLegendre, Copper &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::TypeTraits&lt; DislocationNetwork&lt; 3, 1, CatmullRom, centripetal, 16, GaussLegendre, Copper &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_type_traits_3_01_dislocation_network_3_013_00_011_00_01_catmull_rom_00_01centripc220cc4dc6f0663ae211e0a37fbc9252.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::TypeTraits&lt; DislocationSubNetwork&lt; 3, 1, CatmullRom, centripetal, 16, GaussLegendre, Copper &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::TypeTraits&lt; DislocationSubNetwork&lt; 3, 1, CatmullRom, centripetal, 16, GaussLegendre, Copper &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_type_traits_3_01_dislocation_sub_network_3_013_00_011_00_01_catmull_rom_00_01cen7f8417e9cb4dae58ec93739bfc1fd921.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::TypeTraits&lt; DislocationNode&lt; 3, 1, CatmullRom, centripetal, 16, GaussLegendre, Copper &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::TypeTraits&lt; DislocationNode&lt; 3, 1, CatmullRom, centripetal, 16, GaussLegendre, Copper &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_type_traits_3_01_dislocation_node_3_013_00_011_00_01_catmull_rom_00_01centripetac18c5d296a38a868f8e80bc2c40a4779.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::TypeTraits&lt; DislocationSegment&lt; 3, 1, CatmullRom, centripetal, 16, GaussLegendre, Copper &gt; &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::TypeTraits&lt; DislocationSegment&lt; 3, 1, CatmullRom, centripetal, 16, GaussLegendre, Copper &gt; &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_type_traits_3_01_dislocation_segment_3_013_00_011_00_01_catmull_rom_00_01centripb265d72fd1f917171467eb0b96624e16.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationNode</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationNode</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_node.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>topologyChangeActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationNode</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_node.html</Path>
    <Anchor>a500b6950e139e221812f5367101cb6cb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constraintNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationNode</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_node.html</Path>
    <Anchor>a61d02cad1a5c8aaff1deebb6de11ce93</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationQuadratureParticle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationQuadratureParticle</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_quadrature_particle.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stress_at</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::DislocationQuadratureParticle</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_quadrature_particle.html</Path>
    <Anchor>a8fe2031f5d6714842d11e41deda9a7e4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::DislocationQuadratureParticle</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_quadrature_particle.html</Path>
    <Anchor>aef2046ab6664ca850b035b3011724792</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stress</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::DislocationQuadratureParticle</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_quadrature_particle.html</Path>
    <Anchor>adc727c4e06d7998c3712d3ec98636e13</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quadAbscissa</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::DislocationQuadratureParticle</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_quadrature_particle.html</Path>
    <Anchor>a8ab59fa774eac56ad87db965ded02ab5</Anchor>
    <Abstract>A const reference to Quadrature weight corresponding to this particle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>B</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::DislocationQuadratureParticle</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_quadrature_particle.html</Path>
    <Anchor>a871fa64b30179e412f6a5a683abf676a</Anchor>
    <Abstract>A const reference to the Burgers vector of the parent DislocationSegment.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationSegmentInitializeBeforeBase</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationSegmentInitializeBeforeBase</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_segment_initialize_before_base.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glidePlaneNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::DislocationSegmentInitializeBeforeBase</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_segment_initialize_before_base.html</Path>
    <Anchor>a878593f610f7c3233654558b40259600</Anchor>
    <Abstract>The glide plane normal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationSegment</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TempMaterialType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a91b6fc22f49083dd47142b5cf1d8525b</Anchor>
    <Abstract>the unit vector normal to the glide plane !!! FINISH HERE, USE INITIALIZATION LIST IN CONSTRUCTOR !!!...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DislocationSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a568a08efd54f11ad9264c92b3759afda</Anchor>
    <Abstract>Constructor with Nodes and FLow.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DislocationSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a0a5800423c5f739a3421bb39dd941308</Anchor>
    <Abstract>Constructor with Nodes and FLow.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stress_source</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a7804de36a7cbd07fc019377e473f9e0f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stress_integrand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a21f31aa07b494c8f32424c11569f6804</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stress_field</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a44789670b0b20fe2f88fd2b03a65b6ec</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pkForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>ad205c8b28128a09518756dae0674263b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_pkGauss</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a8f88d798f7f5822625070dd3dbc28ec5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a5ef0a3d4daa55d9aac82c5bdfc9b4a5a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy_field</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>ad7e7ed5e871ee921e7e7b7f6b16a8045</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy_source</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>aa7bf78353dac7f80e4016fab9384d6e4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>energy_integrand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a3acd2207abbf2f20afb81a8562c1c749</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assemble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a8d6c538d98a7cad5ea235903d7f4df9e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>plasticStrainRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>af481643486d996d6269fcb7dcb900628</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>plasticStrainRate_integrand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>acc0fd212ad312dd979993dc850a711a0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>is_boundarySegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>ac0b420cf3bc778f6d4662600a1575aad</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displacement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a524923399978d547f217077689530610</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displacement_integrand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>aa5869ecf8cb2db54cdf89328dcebc6b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lattice_rotation_source</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a60f277837819da8e1bf97a62262f324a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displacement_gradient_source</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a2226b97048a11288a0654efb3fa9a04f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundaryCollision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a5bc5e47d60ff0f27f46ac009899b5d1a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Burgers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::DislocationSegment</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment.html</Path>
    <Anchor>a0bd357ab960371f8f7e7e32a3ba22e61</Anchor>
    <Abstract>The Burgers vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationSharedObjects</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationSharedObjects</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_dislocation_shared_objects.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationSubNetwork</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationSubNetwork</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_sub_network.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>solve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSubNetwork</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_sub_network.html</Path>
    <Anchor>a0d48a0ec6cedef8fb8aef4f3314902ca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GlidePlane</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GlidePlane</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_glide_plane.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>segmentMeshCollisionPairContainer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::GlidePlane</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_glide_plane.html</Path>
    <Anchor>a3626313d294f36bd169266a17d1ac8bd</Anchor>
    <Abstract>Make this const and initialize at constructor time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>planeNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::GlidePlane</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_glide_plane.html</Path>
    <Anchor>aacb07a7d4fe84e8321bc4dda0bb5e969</Anchor>
    <Abstract>The non-unit vector defining the plane in space.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GlidePlaneObserver</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GlidePlaneObserver</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_glide_plane_observer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationJunctionFormation</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationJunctionFormation</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_junction_formation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findIntersections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationJunctionFormation</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_junction_formation.html</Path>
    <Anchor>a36f03a6e03709cf3981a4409bcc4da2e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>formJunctions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationJunctionFormation</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_junction_formation.html</Path>
    <Anchor>a45debe5e1614c9da52e46670ca30020d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationSegmentIntersection</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationSegmentIntersection</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment_intersection.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationSegmentIntersection&lt; 3, 3 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationSegmentIntersection&lt; 3, 3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment_intersection_3_013_00_013_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersectWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::DislocationSegmentIntersection&lt; 3, 3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_segment_intersection_3_013_00_013_01_4.html</Path>
    <Anchor>ad997ff619dc5d5e90a3e77aba33e8454</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::LinearElasticGreensFunction</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::LinearElasticGreensFunction</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_linear_elastic_greens_function.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::LinearElasticGreensFunction&lt; dim, Isotropic &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::LinearElasticGreensFunction&lt; dim, Isotropic &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_linear_elastic_greens_function_3_01dim_00_01_isotropic_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::StrainRateController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::StrainRateController</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_strain_rate_controller.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Copper</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::Copper</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_copper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Copper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::Copper</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_copper.html</Path>
    <Anchor>aca6ee95c06c533f6ae1f3da64ad9953d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CopperPartials</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::CopperPartials</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_copper_partials.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CopperPartials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::CopperPartials</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_copper_partials.html</Path>
    <Anchor>a2e9852332b655fd8e3d7c81973170d9e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CrystalBase</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::CrystalBase</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_crystal_base.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Crystal</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::Crystal</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_crystal.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Crystal&lt; dim, FCC &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::Crystal&lt; dim, FCC &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_crystal_3_01dim_00_01_f_c_c_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::Crystal&lt; dim, FCC &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_crystal_3_01dim_00_01_f_c_c_01_4.html</Path>
    <Anchor>ad3afd2a59324a20839cdb32433ea4063</Anchor>
    <Abstract>The number of slip directions per slip plane.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Crystal&lt; dim, FCCP &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::Crystal&lt; dim, FCCP &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_crystal_3_01dim_00_01_f_c_c_p_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::IsotropicMaterial</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::IsotropicMaterial</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_isotropic_material.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rho</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::IsotropicMaterial</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_isotropic_material.html</Path>
    <Anchor>af932c440ff3c42b01f0e3489d30ed848</Anchor>
    <Abstract>rho_star = mu*b^2/B^2 * rho</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::IsotropicMaterial</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_isotropic_material.html</Path>
    <Anchor>af2c1bf651822fb301d680853d5c6a03d</Anchor>
    <Abstract>cs_star = B/b * sqrt(1/(rho*mu))</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SlipSystem</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SlipSystem</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_slip_system.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DislocationNetworkRemesh</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DislocationNetworkRemesh</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_dislocation_network_remesh.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DDgl</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DDgl</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_d_dgl.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DDgl&lt; 3, alpha &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DDgl&lt; 3, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_d_dgl_3_013_00_01alpha_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DDreader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::DDreader</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_d_dreader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CellPlotter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::CellPlotter</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_cell_plotter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::MeshPlotter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::MeshPlotter</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_mesh_plotter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::PlanePlotter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::PlanePlotter</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_plane_plotter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SingleSplinePlotter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SingleSplinePlotter</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_single_spline_plotter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplinePlotter</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplinePlotter</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_plotter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::ColinearLinesIntersection</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::ColinearLinesIntersection</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_colinear_lines_intersection.html</Path>
    <DeclaredIn>ColinearLinesIntersection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersectionParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::ColinearLinesIntersection</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_colinear_lines_intersection.html</Path>
    <Anchor>a5a5456972981a546e59d45aba059480d</Anchor>
    <Abstract>The container of intersection points.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::LineLineIntersection</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::LineLineIntersection</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_line_line_intersection.html</Path>
    <DeclaredIn>LineLineIntersection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::LineLineIntersection&lt; 2 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::LineLineIntersection&lt; 2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_line_line_intersection_3_012_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersectionParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::LineLineIntersection&lt; 2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_line_line_intersection_3_012_01_4.html</Path>
    <Anchor>ac9a2f610db897ee536d65b6870e3cdca</Anchor>
    <Abstract>The container of intersection points.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::LineLineIntersection&lt; 3 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::LineLineIntersection&lt; 3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_line_line_intersection_3_013_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SimplexEnums</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SimplexEnums</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_simplex_enums.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SimplexEnums&lt; 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SimplexEnums&lt; 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_simplex_enums_3_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::ParametricCurve</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::ParametricCurve</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_parametric_curve.html</Path>
    <Abstract>Class template that computes tangent, curvature and torsion of a parametric curve  in arbitrary dimen...</Abstract>
    <DeclaredIn>ParametricCurve.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_j</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::ParametricCurve</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_parametric_curve.html</Path>
    <Anchor>a4c4b017c72eb4e30f2e042d6d834033a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ju</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::ParametricCurve</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_parametric_curve.html</Path>
    <Anchor>aa9074bd2cf2c9698db2515e2471de1f0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_rll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::ParametricCurve</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_parametric_curve.html</Path>
    <Anchor>a581ac03e003eaef4fa97021ecff044a2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_kappa</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::ParametricCurve</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_parametric_curve.html</Path>
    <Anchor>ad1284258b9b2e6befcd0a64adf272fcc</Anchor>
    <Abstract>the scalar curvature</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::FillC2H0</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::FillC2H0</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_fill_c2_h0.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::FillC2H0&lt; P, i, i &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::FillC2H0&lt; P, i, i &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_fill_c2_h0_3_01_p_00_01i_00_01i_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::FillC2H0&lt; P, i, 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::FillC2H0&lt; P, i, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_fill_c2_h0_3_01_p_00_01i_00_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::FillC2H0&lt; P, 0, 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::FillC2H0&lt; P, 0, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_fill_c2_h0_3_01_p_00_010_00_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::FillC2H1</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::FillC2H1</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_fill_c2_h1.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::FillC2H1&lt; P, i, 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::FillC2H1&lt; P, i, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_fill_c2_h1_3_01_p_00_01i_00_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::FillC2H1&lt; P, 0, 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::FillC2H1&lt; P, 0, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_fill_c2_h1_3_01_p_00_010_00_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Coeff2Hermite</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::Coeff2Hermite</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_coeff2_hermite.html</Path>
    <Abstract>Class template that performs the transformation between the polynomial coefficient matrix  and the He...</Abstract>
    <DeclaredIn>Coeff2Hermite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c2h</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>model::Coeff2Hermite</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_coeff2_hermite.html</Path>
    <Anchor>ae1c3a31268adf6f214148f99af7c2c45</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>h2c</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>model::Coeff2Hermite</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_coeff2_hermite.html</Path>
    <Anchor>a0a1bb9b52c5c16b7b7d7cf0beeab7fc2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::PlanarSplineImplicitization</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::PlanarSplineImplicitization</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_planar_spline_implicitization.html</Path>
    <Abstract>Class template that determines the implicit equation det  of a planar spline of arbitrary degree and ...</Abstract>
    <DeclaredIn>PlanarSplineImplicitization.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlanarSplineImplicitization</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::PlanarSplineImplicitization</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_planar_spline_implicitization.html</Path>
    <Anchor>acf18a04263296e4de97047ffa0f7ada3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersectWith</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::PlanarSplineImplicitization</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_planar_spline_implicitization.html</Path>
    <Anchor>afda663eae190175e492d36bcbb5c03ab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineIntersection</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineIntersection</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_intersection.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineIntersection&lt; 3, polyDegree, 2, 2 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineIntersection&lt; 3, polyDegree, 2, 2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_intersection_3_013_00_01poly_degree_00_012_00_012_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineIntersection&lt; 3, polyDegree, 1, 2 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineIntersection&lt; 3, polyDegree, 1, 2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_intersection_3_013_00_01poly_degree_00_011_00_012_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineIntersection&lt; 3, polyDegree, 1, 1 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineIntersection&lt; 3, polyDegree, 1, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_intersection_3_013_00_01poly_degree_00_011_00_011_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SplineIntersection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineIntersection&lt; 3, polyDegree, 1, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_intersection_3_013_00_01poly_degree_00_011_00_011_01_4.html</Path>
    <Anchor>a0461b1638abd4736c86d13a72f177c00</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Hermite</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::Hermite</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_hermite.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CatmullRom</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::CatmullRom</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_catmull_rom.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineDegeneracy</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineDegeneracy</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_spline_degeneracy.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineDegeneracy&lt; 2, 3 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineDegeneracy&lt; 2, 3 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_spline_degeneracy_3_012_00_013_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::SplineDegeneracy&lt; 2, 3 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_spline_degeneracy_3_012_00_013_01_4.html</Path>
    <Anchor>afbe13e14223e0cacef1d40dd5b8ca4ad</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineDegeneracy&lt; 3, 3 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineDegeneracy&lt; 3, 3 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_spline_degeneracy_3_013_00_013_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPlanar</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::SplineDegeneracy&lt; 3, 3 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_spline_degeneracy_3_013_00_013_01_4.html</Path>
    <Anchor>a8159a2e58240ae57f84770c892ad4f24</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineNodeBase</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineNodeBase</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_node_base.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineSegmentBase</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineSegmentBase</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base.html</Path>
    <DeclaredIn>SplineSegmentBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_SFCH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
    <Anchor>a6dbf8ff4e4b0f4b07cf078610f3be55e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
    <Anchor>aa0132e7eb9d864c03cde15dd0ac38e10</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chordLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
    <Anchor>a2bdee49b182794e7113fe579603968ef</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chordParametricLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
    <Anchor>ab9731406d96f58696ceb836823345164</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_r</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
    <Anchor>a0705487a3fe945da6922d1f54d20f817</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ru</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
    <Anchor>af5af238de02440d0d5b2912b8d24a4ab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_rmu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
    <Anchor>ab6ffa4d973d4367c47182f746e3c69cf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ruu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
    <Anchor>a6eb572967e41f3feec16266216ea7426</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_rmumu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
    <Anchor>a3f416f498a9fe5428789b4698a680d43</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_G2H</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
    <Anchor>afcce4127ca4ca8c85695b5a875dbf857</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 0, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_010_00_01alpha_01_4.html</Path>
    <Anchor>ae69162932f428816e8ad7ea4dbf66b5e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_SFCH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>a0c253825d1d06fc526681f739afe567d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_qH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>af08fe630ab384a99c641b935ed71f68e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BezierCoefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>a564647559831df979e61e1ffc40d2ed4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polynomialCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>aee25d6996b529b8920b989f427f9d498</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>a92c5c835e813e002dfc58346fedb2880</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chordLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>aada6fbe3b7e581d4d298fb3ab7b007b9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chordParametricLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>ae589f1294442cbb09ded0c3dbfb64e11</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_r</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>a70b35252fc3a560aa5d6b9565bbb78a9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ru</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>a3dd857162fb4f48ca7c7134f4ecdc47e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_rmu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>a17259a7a050c62a4974c0a22988bf64d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ruu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>ac8cb63361f73c096c7178a894224e1ca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_rmumu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>afaa3e2720b697e315e08fda82a33d2a8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_G2H</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>a64c964240a2017aefeb6a685898622f9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 1, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_011_00_01alpha_01_4.html</Path>
    <Anchor>a078f4956804dca30b80ceca024ca3426</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_SFCH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
    <Anchor>a47e49da3a1f9f4e623439594b832206f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
    <Anchor>ae0117ffcaa59e942d7c288477ee52056</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chordLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
    <Anchor>a0b753e4dd11b4d0583bb5bd564085476</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chordParametricLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
    <Anchor>ac9dd77e7a16e773669546d1e444f5c25</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_r</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
    <Anchor>aa843747d2792dfdecb9748eaa9261761</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ru</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
    <Anchor>aee7bca9cbcaffa86c790c809d6ac59d0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_rmu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
    <Anchor>aebdd65750df28472cf48b13406fa6abb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_ruu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
    <Anchor>acf8b0acaa8e29a1973d7933c0f9a99e5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_rmumu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
    <Anchor>a9a69ffb8f8f24728e13416d593b38913</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_G2H</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
    <Anchor>aa35e1e2560bdf3497423309fef944256</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NodeType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::SplineSegmentBase&lt; Derived, dim, 2, alpha &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_spline_segment_base_3_01_derived_00_01dim_00_012_00_01alpha_01_4.html</Path>
    <Anchor>a8d1dea6c3ef39aadf4cabb7262673f22</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Binomial</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::Binomial</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_binomial.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CwoR</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::CwoR</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_cwo_r.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CombinationWithoutRepetitionBase</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::CombinationWithoutRepetitionBase</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_combination_without_repetition_base.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CombinationWithoutRepetition</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::CombinationWithoutRepetition</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_combination_without_repetition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CombinationWithoutRepetition&lt; T, k, k &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::CombinationWithoutRepetition&lt; T, k, k &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_combination_without_repetition_3_01_t_00_01k_00_01k_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CombinationWithoutRepetition&lt; T, N, 1 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::CombinationWithoutRepetition&lt; T, N, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_combination_without_repetition_3_01_t_00_01_n_00_011_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Factorial</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::Factorial</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_factorial.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Factorial&lt; 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::Factorial&lt; 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_factorial_3_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GCD</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GCD</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_g_c_d.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GCD&lt; A, 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GCD&lt; A, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_g_c_d_3_01_a_00_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::PermutationWithoutRepetition</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::PermutationWithoutRepetition</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_permutation_without_repetition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::PermutationWithRepetition</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::PermutationWithRepetition</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_permutation_with_repetition.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Pow</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::Pow</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_pow.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Pow&lt; x, 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::Pow&lt; x, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_pow_3_01x_00_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GeneralizedEigenSolver</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GeneralizedEigenSolver</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_generalized_eigen_solver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Givens</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::Givens</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_givens.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get_cs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::Givens</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_givens.html</Path>
    <Anchor>a85d51c03c9b3e0534bf21240ecfb7eb3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::BaseGivensHTstep</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::BaseGivensHTstep</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_base_givens_h_tstep.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GivensHTstep</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GivensHTstep</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_givens_h_tstep.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GivensHTstep&lt; N, 1, NmJ &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GivensHTstep&lt; N, 1, NmJ &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_givens_h_tstep_3_01_n_00_011_00_01_nm_j_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GivensHTstep&lt; N, 1, 3 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GivensHTstep&lt; N, 1, 3 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_givens_h_tstep_3_01_n_00_011_00_013_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GivensHT</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GivensHT</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_givens_h_t.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GivensQRkernel</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GivensQRkernel</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_givens_q_rkernel.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GivensQRstep</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GivensQRstep</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_givens_q_rstep.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GivensQRstep&lt; N, 0, NmJ &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GivensQRstep&lt; N, 0, NmJ &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_givens_q_rstep_3_01_n_00_010_00_01_nm_j_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GivensQRstep&lt; N, 0, 2 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GivensQRstep&lt; N, 0, 2 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_givens_q_rstep_3_01_n_00_010_00_012_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GivensQR</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GivensQR</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_givens_q_r.html</Path>
    <Abstract>Class template that performs and stores the QR decomposition of a NxN matrix based on Givens rotation...</Abstract>
    <DeclaredIn>GivensQR.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GramSchmidt</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GramSchmidt</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_gram_schmidt.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SchurComplementSolver</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::SchurComplementSolver</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_schur_complement_solver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SchurComplementSolver</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SchurComplementSolver</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_schur_complement_solver.html</Path>
    <Anchor>abc909e0d7af7a69a33b5f6457c2f8017</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>llt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::SchurComplementSolver</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_schur_complement_solver.html</Path>
    <Anchor>a34b95f56894b2e52a9bc2e690ce7da28</Anchor>
    <Abstract>Solves the system of equations in block-form:  where the matrix  is a symmetric positive definite mat...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pplu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::SchurComplementSolver</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_schur_complement_solver.html</Path>
    <Anchor>a49a021c28be0230019e32c2d58b172d3</Anchor>
    <Abstract>the partial-pivot LU decomposition of KPQ*inv(KQQ)*KPQ^T</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>L</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::SchurComplementSolver</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_schur_complement_solver.html</Path>
    <Anchor>a8bdd51bc3279a05e12f649a4a6ae43f8</Anchor>
    <Abstract>The vector of Lagrange multipliers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>X</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::SchurComplementSolver</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_schur_complement_solver.html</Path>
    <Anchor>a72e22d85d7e857c600b217e21735b813</Anchor>
    <Abstract>The solution vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SchurComplementSparseSolver</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SchurComplementSparseSolver</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_schur_complement_sparse_solver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DepthFirst</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::DepthFirst</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_depth_first.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Network</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::Network</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::Network</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network.html</Path>
    <Anchor>a970db0922c8516c63d198de1769f087e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linkOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::Network</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network.html</Path>
    <Anchor>a07712cf643adabc04a781f2ecf2da360</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeBegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::Network</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network.html</Path>
    <Anchor>a2a0ed050e765caf19aa335536cef0f24</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeBegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::Network</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network.html</Path>
    <Anchor>ac14741bfe29a8841962d36b685e6b775</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::Network</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network.html</Path>
    <Anchor>a2b1793323edd63963c6aec3caeb9aef6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::Network</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network.html</Path>
    <Anchor>a059251de969710736fd091fd5adad022</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::NetworkLink</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::NetworkLink</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network_link.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NetworkLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::NetworkLink</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network_link.html</Path>
    <Anchor>a4e5aad41de186df2d4f9bfbc03c14060</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pSN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::NetworkLink</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network_link.html</Path>
    <Anchor>a7500f4e8fb470c17d50e57bafc10a768</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::NetworkNode</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::NetworkNode</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network_node.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NetworkNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::NetworkNode</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network_node.html</Path>
    <Anchor>affb13503558b52702e518a484bff4768</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pSN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::NetworkNode</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network_node.html</Path>
    <Anchor>acf5ba3b05d23161161b2bb6ecb75558d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetPSN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::NetworkNode</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_network_node.html</Path>
    <Anchor>aa660fedde9425a4b0544c1a85768dffb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::ExpandingEdge</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::ExpandingEdge</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_expanding_edge.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::EdgeExpansion</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::EdgeExpansion</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_edge_expansion.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::EdgeFinder</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::EdgeFinder</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_edge_finder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>link</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::EdgeFinder</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_edge_finder.html</Path>
    <Anchor>a4768f8afd8b0c960c05a9c58d0a49692</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::EdgeFinder&lt; EdgeType, true &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::EdgeFinder&lt; EdgeType, true &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_edge_finder_3_01_edge_type_00_01true_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>link</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::EdgeFinder&lt; EdgeType, true &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_edge_finder_3_01_edge_type_00_01true_01_4.html</Path>
    <Anchor>a1629d5f29bf091ed5827ee38864bacb7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::VertexConnection</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::VertexConnection</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_vertex_connection.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::VertexContraction</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::VertexContraction</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_vertex_contraction.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::VertexFinder</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::VertexFinder</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_vertex_finder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::VertexFinder</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_vertex_finder.html</Path>
    <Anchor>aaf29364c21d0b5c7267cc0cedb3327f9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::VertexInsertion</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::VertexInsertion</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_vertex_insertion.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::VertexInsertion</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_vertex_insertion.html</Path>
    <Anchor>a80f0a3594feb7815c2258aa0b04f36c6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::EdgeReader</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::EdgeReader</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_edge_reader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isGood</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>model::EdgeReader</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_edge_reader.html</Path>
    <Anchor>a841900604669f3dc9b49ac73d2d3072a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::VertexReader</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::VertexReader</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_vertex_reader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SubNetwork</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SubNetwork</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_sub_network.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SubNetwork</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::SubNetwork</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_sub_network.html</Path>
    <Anchor>a5b6ca0358836eabdec379e90a169ca4e</Anchor>
    <Abstract>CRTP-based class template which.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GaussLegendre</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GaussLegendre</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre.html</Path>
    <Abstract>Class template defining the GaussLegendre rules for determination of quadrature abscissas and weights...</Abstract>
    <DeclaredIn>GaussLegendre.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GaussLegendre&lt; 1, qOrder &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GaussLegendre&lt; 1, qOrder &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre_3_011_00_01q_order_01_4.html</Path>
    <Abstract>The P_n(x) = (2n-1)/n * x * P_(n-1) - (n-1)/n * P_(n-2)</Abstract>
    <DeclaredIn>GaussLegendre.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::GaussLegendre&lt; 1, qOrder &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre_3_011_00_01q_order_01_4.html</Path>
    <Anchor>a383879206a8df69638f005622c0d3430</Anchor>
    <Abstract>Class template defining the coefficients A, B and C of the recursive relation for orthogonal Legendre...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::GaussLegendre&lt; 1, qOrder &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre_3_011_00_01q_order_01_4.html</Path>
    <Anchor>a75b9a6cb013a00cf279ea828a3b92171</Anchor>
    <Abstract>The coefficient b.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::GaussLegendre&lt; 1, qOrder &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre_3_011_00_01q_order_01_4.html</Path>
    <Anchor>af7faa1892830d2ab87ea5331f2689891</Anchor>
    <Abstract>The coefficient c.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GaussLegendre&lt; 2, 1 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GaussLegendre&lt; 2, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre_3_012_00_011_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GaussLegendre&lt; 2, 3 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GaussLegendre&lt; 2, 3 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre_3_012_00_013_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GaussLegendre&lt; 2, 4 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GaussLegendre&lt; 2, 4 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre_3_012_00_014_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GaussLegendre&lt; 2, 37 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GaussLegendre&lt; 2, 37 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre_3_012_00_0137_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GaussLegendre&lt; 3, 1 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GaussLegendre&lt; 3, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre_3_013_00_011_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GaussLegendre&lt; 3, 4 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GaussLegendre&lt; 3, 4 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre_3_013_00_014_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::GaussLegendre&lt; 3, 5 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::GaussLegendre&lt; 3, 5 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_gauss_legendre_3_013_00_015_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::QuadPow</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::QuadPow</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_quad_pow.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::VectorDimTypeSelector</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::VectorDimTypeSelector</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_vector_dim_type_selector.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::VectorDimTypeSelector&lt; 1, qOrder &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::VectorDimTypeSelector&lt; 1, qOrder &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_vector_dim_type_selector_3_011_00_01q_order_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::Quadrature</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::Quadrature</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_quadrature.html</Path>
    <Abstract>A static class template for generating quadrature abcsissas and weights for arbitrary-order and Quadr...</Abstract>
    <DeclaredIn>Quadrature.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>integrate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::Quadrature</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_quadrature.html</Path>
    <Anchor>a8820266eebe25109afe7e4cab4eda438</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>integrate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::Quadrature</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_quadrature.html</Path>
    <Anchor>aa80b4c0d760e59a4351c470e9ccf738c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>integrate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::Quadrature</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_quadrature.html</Path>
    <Anchor>a8017fe27223310ab200e78b9f8b9b7e5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::Quadrature</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_quadrature.html</Path>
    <Anchor>aa3bba314906243153409fc6056375d4c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>execute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::Quadrature</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_quadrature.html</Path>
    <Anchor>ab96947496c79a63095e52e70b2cce24b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>abscissas</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::Quadrature</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_quadrature.html</Path>
    <Anchor>a39bde8b8646999b05a493eedc7202299</Anchor>
    <Abstract>The static const member data abscissas is initialized only once when Quadrature&amp;lt;1,qOrder,QuadratureRule&amp;gt; is first encountered.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>weights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::Quadrature</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_quadrature.html</Path>
    <Anchor>aad89450c9a6dd8f1f39eb219d13b2cd6</Anchor>
    <Abstract>The static const member data abscissas is initialized only once when Quadrature&amp;lt;1,qOrder,QuadratureRule&amp;gt; is first encountered.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::QuadratureRecursiveRelation</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::QuadratureRecursiveRelation</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_quadrature_recursive_relation.html</Path>
    <Abstract>A static class template for generating quadrature abcsissas and weights for arbitrary-order and rule ...</Abstract>
    <DeclaredIn>QuadratureRecursiveRelation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::NeighborShift</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::NeighborShift</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_neighbor_shift.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::NeighborShift&lt; 3 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::NeighborShift&lt; 3 &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_neighbor_shift_3_013_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SpaceCell</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SpaceCell</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_space_cell.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpaceCell</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::SpaceCell</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_space_cell.html</Path>
    <Anchor>a9483313e2b22efb1fd30d69c229012de</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addParticle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::SpaceCell</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_space_cell.html</Path>
    <Anchor>a10328273d07e27707b2fc3994caf69ec</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeParticle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::SpaceCell</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_space_cell.html</Path>
    <Anchor>ac7cc7bbf0fe38da36dc47f3be3d0b09e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeNeighborParticle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::SpaceCell</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_space_cell.html</Path>
    <Anchor>a52333831ebe7643985a3181c61c6dde9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SpaceCellObserver</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SpaceCellObserver</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_space_cell_observer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SpaceCellParticle</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SpaceCellParticle</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_space_cell_particle.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cellID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::SpaceCellParticle</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_space_cell_particle.html</Path>
    <Anchor>a2b34fb61614f80344e4e8a9dc58bd7aa</Anchor>
    <Abstract>The cell ID.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pCell</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::SpaceCellParticle</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_space_cell_particle.html</Path>
    <Anchor>ae151faeee05e292a1393050ed17d93f5</Anchor>
    <Abstract>The pointer to the Cell.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::AddressBookBase</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::AddressBookBase</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_address_book_base.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>show</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::AddressBookBase</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_address_book_base.html</Path>
    <Anchor>a22f86025c3379002c15277cb1cfd2158</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::AddressBook</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::AddressBook</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_address_book.html</Path>
    <Abstract>AddressBook is a class template that stores a static map of pointers to Derived class objects using t...</Abstract>
    <DeclaredIn>AddressBook.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::AddressBook&lt; Derived, 1 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::AddressBook&lt; Derived, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_address_book_3_01_derived_00_011_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AddressBook</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::AddressBook&lt; Derived, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_address_book_3_01_derived_00_011_01_4.html</Path>
    <Anchor>a54458c4da5c8e1990f453336c5211ce4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AddressBook</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::AddressBook&lt; Derived, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_address_book_3_01_derived_00_011_01_4.html</Path>
    <Anchor>ae1e3fe182a39764548538a5e3f1354ca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::AddressBook&lt; Derived, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_address_book_3_01_derived_00_011_01_4.html</Path>
    <Anchor>a680cc0aaa442e4c89a50a3a43d46b550</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Naddresses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::AddressBook&lt; Derived, 1 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_address_book_3_01_derived_00_011_01_4.html</Path>
    <Anchor>a138858bd7608314f2fad28993bc24c28</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::AddressBook&lt; T, 0 &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::AddressBook&lt; T, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_address_book_3_01_t_00_010_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Naddresses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::AddressBook&lt; T, 0 &gt;</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_address_book_3_01_t_00_010_01_4.html</Path>
    <Anchor>ad2ad053d29723bd87922a36888e49c40</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::BinaryFileReader</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::BinaryFileReader</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_binary_file_reader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CompareVectorsByComponent</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::CompareVectorsByComponent</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_compare_vectors_by_component.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CompareVectorsByComponent&lt; T, 1, CastType &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::CompareVectorsByComponent&lt; T, 1, CastType &gt;</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_compare_vectors_by_component_3_01_t_00_011_00_01_cast_type_01_4.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::CRTP</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::CRTP</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_c_r_t_p.html</Path>
    <Abstract>Implementation of the Curiously Recurring Template Pattern (CRTP). CRTP achieves static polyphormism ...</Abstract>
    <DeclaredIn>CRTP.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRTP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::CRTP</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_c_r_t_p.html</Path>
    <Anchor>a85d022c5e2e136a890a7de1eab854ee7</Anchor>
    <Abstract>The default constructor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>derived</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::CRTP</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_c_r_t_p.html</Path>
    <Anchor>a0b4b744441231d031bd33c0c822a5c41</Anchor>
    <Abstract>A reference to the derived object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>p_derived</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::CRTP</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_c_r_t_p.html</Path>
    <Anchor>a8b45c2b163e8d2ae5d282b01de727fc7</Anchor>
    <Abstract>A pointer to the derived object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>derived</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::CRTP</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_c_r_t_p.html</Path>
    <Anchor>a6777ea629e6eeba2c5672963173c0e6a</Anchor>
    <Abstract>A reference to the const derived object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>p_derived</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>model::CRTP</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_c_r_t_p.html</Path>
    <Anchor>a4c6c989e61877bdc014a6d2b37926146</Anchor>
    <Abstract>A pointer to the const derived object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::DataReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::DataReader</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_data_reader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::EigenDataReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::EigenDataReader</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_eigen_data_reader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::OutputFile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::OutputFile</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_output_file.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::ScalarDataReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>model::ScalarDataReader</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_scalar_data_reader.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SequentialBinFile</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SequentialBinFile</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_sequential_bin_file.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::SequentialOutputFile</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::SequentialOutputFile</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_sequential_output_file.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::StaticID</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::StaticID</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_static_i_d.html</Path>
    <Abstract>A class template that implements a counter of the number of instances of Derived type that are create...</Abstract>
    <DeclaredIn>StaticID.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>model::StaticID</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_static_i_d.html</Path>
    <Anchor>a91e91a4c43dc2cb6259f58bdceb686a5</Anchor>
    <Abstract>The static ID of this.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::TypeTraits</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::TypeTraits</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_type_traits.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TypeTraits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>model::TypeTraits</Scope>
    </TokenIdentifier>
    <Path>structmodel_1_1_type_traits.html</Path>
    <Anchor>ac3f29747513ceb56e1f8c7a67fd0516d</Anchor>
    <Abstract>A helper struct for predefinition of types in model classes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>model::UniqueOutputFile</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>model::UniqueOutputFile</Scope>
    </TokenIdentifier>
    <Path>classmodel_1_1_unique_output_file.html</Path>
  </Token>
</Tokens>
